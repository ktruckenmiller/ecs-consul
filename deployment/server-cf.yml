---
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  VolumeSize:
    Default: 22
    Type: String
  ImageId:
    Type: String
  VpcId:
    Type: String
  HomeIp:
    Type: String
Resources:
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
      Policies:
      - PolicyName: consul-instance
        PolicyDocument:
          Statement:
          - Action:
            - s3:*
            Effect: Allow
            Resource:
              - !Sub arn:aws:s3:::kloudcover/consul/*
          - Action:
            - s3:List*
            Effect: Allow
            Resource:
              - !Sub arn:aws:s3:::kloudcover
          - Action:
            - ec2:DescribeInstances
            Effect: Allow
            Resource:
              - '*'
          - Action:
            - ssm:Get*
            - ssm:Put*
            - ssm:Delete*
            Effect: Allow
            Resource:
            - Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/consul/*

  ConsulBadgeSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: SG for ecs instances to connect to the cluster
      SecurityGroupIngress:
      - FromPort: 0
        IpProtocol: -1
        SourceSecurityGroupId: sg-07c2597a
        ToPort: 64500
      - FromPort: 0
        IpProtocol: tcp
        ToPort: 64500
        CidrIp: !Sub ${HomeIp}/32

  IngressBadge:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: ConsulBadgeSG
    Properties:
      FromPort: 0
      IpProtocol: -1
      ToPort: 64500
      SourceSecurityGroupId: !GetAtt ConsulBadgeSG.GroupId
      GroupId: !GetAtt ConsulBadgeSG.GroupId


  ConsulPort22SG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: SSH for me
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceRole

  SpotFleetRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: spotfleet.amazonaws.com
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - ec2:Describe*
            - ec2:CancelSpotFleetRequests
            - ec2:CancelSpotInstanceRequests
            - ec2:ModifySpotFleetRequest
            - ec2:RequestSpotFleet
            - ec2:RequestSpotInstances
            - ec2:TerminateInstances
            - ec2:CreateTags
            - iam:PassRole
            - iam:ListRoles
            - iam:ListInstanceProfiles
            Effect: Allow
            Resource: "*"
        PolicyName: ec2-spot-fleet
  SpotFleetConsul1:
    Type: AWS::EC2::SpotFleet
    Properties:
      SpotFleetRequestConfigData:
        AllocationStrategy: diversified
        TargetCapacity: 1
        IamFleetRole:
          Fn::GetAtt:
          - SpotFleetRole
          - Arn
        LaunchSpecifications:
        - BlockDeviceMappings:
          - DeviceName: "/dev/xvdcz"
            Ebs:
              DeleteOnTermination: 'true'
              VolumeSize: !Ref VolumeSize
              VolumeType: gp2
          IamInstanceProfile:
            Arn: !GetAtt InstanceProfile.Arn
          ImageId: !Ref ImageId
          InstanceType: t2.micro
          KeyName: boston
          WeightedCapacity: 1
          Monitoring:
            Enabled: 'true'
          SecurityGroups:
          - GroupId:
              Ref: ConsulBadgeSG
          - GroupId:
              Ref: ConsulPort22SG

          SpotPrice: '0.015'
          SubnetId: subnet-bc3193d8
          TagSpecifications:
            - ResourceType: instance
              Tags:
              - Key: Name
                Value: consul-server
          UserData:
            Fn::Base64:
              Fn::Sub:
                  |
                  #!/bin/bash -xe
                  set -e

                  # mkdir -p /efs
                  # mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 fs-df827476.efs.us-west-2.amazonaws.com:/ /efs

                  echo "Grabbing IPs..."
                  PRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)
                  PUBLIC_IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)

                  # Setup Consul
                  mkdir -p /etc/consul.d
                  mkdir -p /tmp/consul

                  tee /etc/consul.d/config.json > /dev/null <<EOF
                  {
                    "bind_addr": "$PRIVATE_IP",
                    "client_addr": "0.0.0.0",
                    "connect": {
                      "enabled": true
                    },
                    "advertise_addr": "$PRIVATE_IP",
                    "advertise_addr_wan": "$PUBLIC_IP",
                    "data_dir": "/tmp/consul",
                    "disable_remote_exec": true,
                    "disable_update_check": true,
                    "leave_on_terminate": true,
                    "bootstrap_expect": 3,
                    "retry_join": ["provider=aws tag_key=Name tag_value=consul-server"],
                    "server": true,
                    "ui": true
                  }
                  EOF

                  consul agent -config-dir="/etc/consul.d" &
                  AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)

                  export AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)
                  if [ $AZ = "us-west-2a" ]; then
                    echo "We are in ${AZ}. I will back things up."
                    while true; do
                      sleep 43200
                      echo "Starting backup."
                      export BOSTON=$(date +%Y%m%d%H%M)
                      consul snapshot save $BOSTON.snap
                      aws s3 cp $BOSTON.snap s3://kloudcover/consul/$BOSTON.snap
                      echo "Backed up consul."
                    done
                  fi
        - BlockDeviceMappings:
          - DeviceName: "/dev/xvdcz"
            Ebs:
              DeleteOnTermination: 'true'
              VolumeSize: !Ref VolumeSize
              VolumeType: gp2
          IamInstanceProfile:
            Arn: !GetAtt InstanceProfile.Arn
          ImageId: !Ref ImageId
          InstanceType: m3.medium
          KeyName: boston
          WeightedCapacity: 1
          Monitoring:
            Enabled: 'true'
          SecurityGroups:
          - GroupId:
              Ref: ConsulBadgeSG
          - GroupId:
              Ref: ConsulPort22SG

          SpotPrice: '0.015'
          SubnetId: subnet-bc3193d8
          TagSpecifications:
            - ResourceType: instance
              Tags:
              - Key: Name
                Value: consul-server
          UserData:
            Fn::Base64:
              Fn::Sub:
                  |
                  #!/bin/bash -xe
                  set -e

                  # mkdir -p /efs
                  # mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 fs-df827476.efs.us-west-2.amazonaws.com:/ /efs

                  echo "Grabbing IPs..."
                  PRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)
                  PUBLIC_IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)

                  # Setup Consul
                  mkdir -p /etc/consul.d
                  mkdir -p /tmp/consul

                  tee /etc/consul.d/config.json > /dev/null <<EOF
                  {
                    "bind_addr": "$PRIVATE_IP",
                    "client_addr": "0.0.0.0",
                    "connect": {
                      "enabled": true
                    },
                    "advertise_addr": "$PRIVATE_IP",
                    "advertise_addr_wan": "$PUBLIC_IP",
                    "data_dir": "/tmp/consul",
                    "disable_remote_exec": true,
                    "disable_update_check": true,
                    "leave_on_terminate": true,
                    "bootstrap_expect": 3,
                    "retry_join": ["provider=aws tag_key=Name tag_value=consul-server"],
                    "server": true,
                    "ui": true
                  }
                  EOF

                  consul agent -config-dir="/etc/consul.d" &
                  AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)

                  export AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)
                  if [ $AZ = "us-west-2a" ]; then
                    echo "We are in ${AZ}. I will back things up."
                    while true; do
                      sleep 43200
                      echo "Starting backup."
                      export BOSTON=$(date +%Y%m%d%H%M)
                      consul snapshot save $BOSTON.snap
                      aws s3 cp $BOSTON.snap s3://kloudcover/consul/$BOSTON.snap
                      echo "Backed up consul."
                    done
                  fi
        - BlockDeviceMappings:
          - DeviceName: "/dev/xvdcz"
            Ebs:
              DeleteOnTermination: 'true'
              VolumeSize: !Ref VolumeSize
              VolumeType: gp2
          IamInstanceProfile:
            Arn: !GetAtt InstanceProfile.Arn
          ImageId: !Ref ImageId
          InstanceType: t2.small
          KeyName: boston
          WeightedCapacity: 1
          Monitoring:
            Enabled: 'true'
          SecurityGroups:
          - GroupId:
              Ref: ConsulBadgeSG
          - GroupId:
              Ref: ConsulPort22SG

          SpotPrice: '0.015'
          SubnetId: subnet-bc3193d8
          TagSpecifications:
            - ResourceType: instance
              Tags:
              - Key: Name
                Value: consul-server
          UserData:
            Fn::Base64:
              Fn::Sub:
                  |
                  #!/bin/bash -xe
                  set -e

                  # mkdir -p /efs
                  # mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 fs-df827476.efs.us-west-2.amazonaws.com:/ /efs

                  echo "Grabbing IPs..."
                  PRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)
                  PUBLIC_IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)

                  # Setup Consul
                  mkdir -p /etc/consul.d
                  mkdir -p /tmp/consul

                  tee /etc/consul.d/config.json > /dev/null <<EOF
                  {
                    "bind_addr": "$PRIVATE_IP",
                    "client_addr": "0.0.0.0",
                    "connect": {
                      "enabled": true
                    },
                    "advertise_addr": "$PRIVATE_IP",
                    "advertise_addr_wan": "$PUBLIC_IP",
                    "data_dir": "/tmp/consul",
                    "disable_remote_exec": true,
                    "disable_update_check": true,
                    "leave_on_terminate": true,
                    "bootstrap_expect": 3,
                    "retry_join": ["provider=aws tag_key=Name tag_value=consul-server"],
                    "server": true,
                    "ui": true
                  }
                  EOF

                  consul agent -config-dir="/etc/consul.d" &
                  AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)

                  export AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)
                  if [ $AZ = "us-west-2a" ]; then
                    echo "We are in ${AZ}. I will back things up."
                    while true; do
                      sleep 43200
                      echo "Starting backup."
                      export BOSTON=$(date +%Y%m%d%H%M)
                      consul snapshot save $BOSTON.snap
                      aws s3 cp $BOSTON.snap s3://kloudcover/consul/$BOSTON.snap
                      echo "Backed up consul."
                    done
                  fi
 # instance types
  SpotFleetConsul2:
    DependsOn: SpotFleetConsul1
    Type: AWS::EC2::SpotFleet
    Properties:
      SpotFleetRequestConfigData:
        AllocationStrategy: diversified
        TargetCapacity: 1
        IamFleetRole:
          Fn::GetAtt:
          - SpotFleetRole
          - Arn
        LaunchSpecifications:
        - BlockDeviceMappings:
          - DeviceName: "/dev/xvdcz"
            Ebs:
              DeleteOnTermination: 'true'
              VolumeSize: !Ref VolumeSize
              VolumeType: gp2
          IamInstanceProfile:
            Arn: !GetAtt InstanceProfile.Arn
          ImageId: !Ref ImageId
          InstanceType: t2.micro
          KeyName: boston
          WeightedCapacity: 1
          Monitoring:
            Enabled: 'true'
          SecurityGroups:
          - GroupId:
              Ref: ConsulBadgeSG
          - GroupId:
              Ref: ConsulPort22SG

          SpotPrice: '0.015'
          SubnetId: subnet-ed43849b
          TagSpecifications:
            - ResourceType: instance
              Tags:
              - Key: Name
                Value: consul-server
          UserData:
            Fn::Base64:
              Fn::Sub:
                  |
                  #!/bin/bash -xe
                  set -e

                  # mkdir -p /efs
                  # mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 fs-df827476.efs.us-west-2.amazonaws.com:/ /efs

                  echo "Grabbing IPs..."
                  PRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)
                  PUBLIC_IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)

                  # Setup Consul
                  mkdir -p /etc/consul.d
                  mkdir -p /tmp/consul

                  tee /etc/consul.d/config.json > /dev/null <<EOF
                  {
                    "bind_addr": "$PRIVATE_IP",
                    "client_addr": "0.0.0.0",
                    "connect": {
                      "enabled": true
                    },
                    "advertise_addr": "$PRIVATE_IP",
                    "advertise_addr_wan": "$PUBLIC_IP",
                    "data_dir": "/tmp/consul",
                    "disable_remote_exec": true,
                    "disable_update_check": true,
                    "leave_on_terminate": true,
                    "bootstrap_expect": 3,
                    "retry_join": ["provider=aws tag_key=Name tag_value=consul-server"],
                    "server": true,
                    "ui": true
                  }
                  EOF

                  consul agent -config-dir="/etc/consul.d" &
                  AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)

                  export AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)
                  if [ $AZ = "us-west-2a" ]; then
                    echo "We are in ${AZ}. I will back things up."
                    while true; do
                      sleep 43200
                      echo "Starting backup."
                      export BOSTON=$(date +%Y%m%d%H%M)
                      consul snapshot save $BOSTON.snap
                      aws s3 cp $BOSTON.snap s3://kloudcover/consul/$BOSTON.snap
                      echo "Backed up consul."
                    done
                  fi
        - BlockDeviceMappings:
          - DeviceName: "/dev/xvdcz"
            Ebs:
              DeleteOnTermination: 'true'
              VolumeSize: !Ref VolumeSize
              VolumeType: gp2
          IamInstanceProfile:
            Arn: !GetAtt InstanceProfile.Arn
          ImageId: !Ref ImageId
          InstanceType: m3.medium
          KeyName: boston
          WeightedCapacity: 1
          Monitoring:
            Enabled: 'true'
          SecurityGroups:
          - GroupId:
              Ref: ConsulBadgeSG
          - GroupId:
              Ref: ConsulPort22SG

          SpotPrice: '0.015'
          SubnetId: subnet-ed43849b
          TagSpecifications:
            - ResourceType: instance
              Tags:
              - Key: Name
                Value: consul-server
          UserData:
            Fn::Base64:
              Fn::Sub:
                  |
                  #!/bin/bash -xe
                  set -e

                  # mkdir -p /efs
                  # mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 fs-df827476.efs.us-west-2.amazonaws.com:/ /efs

                  echo "Grabbing IPs..."
                  PRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)
                  PUBLIC_IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)

                  # Setup Consul
                  mkdir -p /etc/consul.d
                  mkdir -p /tmp/consul

                  tee /etc/consul.d/config.json > /dev/null <<EOF
                  {
                    "bind_addr": "$PRIVATE_IP",
                    "client_addr": "0.0.0.0",
                    "connect": {
                      "enabled": true
                    },
                    "advertise_addr": "$PRIVATE_IP",
                    "advertise_addr_wan": "$PUBLIC_IP",
                    "data_dir": "/tmp/consul",
                    "disable_remote_exec": true,
                    "disable_update_check": true,
                    "leave_on_terminate": true,
                    "bootstrap_expect": 3,
                    "retry_join": ["provider=aws tag_key=Name tag_value=consul-server"],
                    "server": true,
                    "ui": true
                  }
                  EOF

                  consul agent -config-dir="/etc/consul.d" &
                  AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)

                  export AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)
                  if [ $AZ = "us-west-2a" ]; then
                    echo "We are in ${AZ}. I will back things up."
                    while true; do
                      sleep 43200
                      echo "Starting backup."
                      export BOSTON=$(date +%Y%m%d%H%M)
                      consul snapshot save $BOSTON.snap
                      aws s3 cp $BOSTON.snap s3://kloudcover/consul/$BOSTON.snap
                      echo "Backed up consul."
                    done
                  fi
        - BlockDeviceMappings:
          - DeviceName: "/dev/xvdcz"
            Ebs:
              DeleteOnTermination: 'true'
              VolumeSize: !Ref VolumeSize
              VolumeType: gp2
          IamInstanceProfile:
            Arn: !GetAtt InstanceProfile.Arn
          ImageId: !Ref ImageId
          InstanceType: t2.small
          KeyName: boston
          WeightedCapacity: 1
          Monitoring:
            Enabled: 'true'
          SecurityGroups:
          - GroupId:
              Ref: ConsulBadgeSG
          - GroupId:
              Ref: ConsulPort22SG

          SpotPrice: '0.015'
          SubnetId: subnet-ed43849b
          TagSpecifications:
            - ResourceType: instance
              Tags:
              - Key: Name
                Value: consul-server
          UserData:
            Fn::Base64:
              Fn::Sub:
                  |
                  #!/bin/bash -xe
                  set -e

                  # mkdir -p /efs
                  # mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 fs-df827476.efs.us-west-2.amazonaws.com:/ /efs

                  echo "Grabbing IPs..."
                  PRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)
                  PUBLIC_IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)

                  # Setup Consul
                  mkdir -p /etc/consul.d
                  mkdir -p /tmp/consul

                  tee /etc/consul.d/config.json > /dev/null <<EOF
                  {
                    "bind_addr": "$PRIVATE_IP",
                    "client_addr": "0.0.0.0",
                    "connect": {
                      "enabled": true
                    },
                    "advertise_addr": "$PRIVATE_IP",
                    "advertise_addr_wan": "$PUBLIC_IP",
                    "data_dir": "/tmp/consul",
                    "disable_remote_exec": true,
                    "disable_update_check": true,
                    "leave_on_terminate": true,
                    "bootstrap_expect": 3,
                    "retry_join": ["provider=aws tag_key=Name tag_value=consul-server"],
                    "server": true,
                    "ui": true
                  }
                  EOF

                  consul agent -config-dir="/etc/consul.d" &
                  AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)

                  export AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)
                  if [ $AZ = "us-west-2a" ]; then
                    echo "We are in ${AZ}. I will back things up."
                    while true; do
                      sleep 43200
                      echo "Starting backup."
                      export BOSTON=$(date +%Y%m%d%H%M)
                      consul snapshot save $BOSTON.snap
                      aws s3 cp $BOSTON.snap s3://kloudcover/consul/$BOSTON.snap
                      echo "Backed up consul."
                    done
                  fi
 # instance types
  SpotFleetConsul3:
    DependsOn: SpotFleetConsul2
    Type: AWS::EC2::SpotFleet
    Properties:
      SpotFleetRequestConfigData:
        AllocationStrategy: diversified
        TargetCapacity: 1
        IamFleetRole:
          Fn::GetAtt:
          - SpotFleetRole
          - Arn
        LaunchSpecifications:
        - BlockDeviceMappings:
          - DeviceName: "/dev/xvdcz"
            Ebs:
              DeleteOnTermination: 'true'
              VolumeSize: !Ref VolumeSize
              VolumeType: gp2
          IamInstanceProfile:
            Arn: !GetAtt InstanceProfile.Arn
          ImageId: !Ref ImageId
          InstanceType: t2.micro
          KeyName: boston
          WeightedCapacity: 1
          Monitoring:
            Enabled: 'true'
          SecurityGroups:
          - GroupId:
              Ref: ConsulBadgeSG
          - GroupId:
              Ref: ConsulPort22SG

          SpotPrice: '0.015'
          SubnetId: subnet-9b2938c2
          TagSpecifications:
            - ResourceType: instance
              Tags:
              - Key: Name
                Value: consul-server
          UserData:
            Fn::Base64:
              Fn::Sub:
                  |
                  #!/bin/bash -xe
                  set -e

                  # mkdir -p /efs
                  # mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 fs-df827476.efs.us-west-2.amazonaws.com:/ /efs

                  echo "Grabbing IPs..."
                  PRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)
                  PUBLIC_IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)

                  # Setup Consul
                  mkdir -p /etc/consul.d
                  mkdir -p /tmp/consul

                  tee /etc/consul.d/config.json > /dev/null <<EOF
                  {
                    "bind_addr": "$PRIVATE_IP",
                    "client_addr": "0.0.0.0",
                    "connect": {
                      "enabled": true
                    },
                    "advertise_addr": "$PRIVATE_IP",
                    "advertise_addr_wan": "$PUBLIC_IP",
                    "data_dir": "/tmp/consul",
                    "disable_remote_exec": true,
                    "disable_update_check": true,
                    "leave_on_terminate": true,
                    "bootstrap_expect": 3,
                    "retry_join": ["provider=aws tag_key=Name tag_value=consul-server"],
                    "server": true,
                    "ui": true
                  }
                  EOF

                  consul agent -config-dir="/etc/consul.d" &
                  AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)

                  export AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)
                  if [ $AZ = "us-west-2a" ]; then
                    echo "We are in ${AZ}. I will back things up."
                    while true; do
                      sleep 43200
                      echo "Starting backup."
                      export BOSTON=$(date +%Y%m%d%H%M)
                      consul snapshot save $BOSTON.snap
                      aws s3 cp $BOSTON.snap s3://kloudcover/consul/$BOSTON.snap
                      echo "Backed up consul."
                    done
                  fi
        - BlockDeviceMappings:
          - DeviceName: "/dev/xvdcz"
            Ebs:
              DeleteOnTermination: 'true'
              VolumeSize: !Ref VolumeSize
              VolumeType: gp2
          IamInstanceProfile:
            Arn: !GetAtt InstanceProfile.Arn
          ImageId: !Ref ImageId
          InstanceType: m3.medium
          KeyName: boston
          WeightedCapacity: 1
          Monitoring:
            Enabled: 'true'
          SecurityGroups:
          - GroupId:
              Ref: ConsulBadgeSG
          - GroupId:
              Ref: ConsulPort22SG

          SpotPrice: '0.015'
          SubnetId: subnet-9b2938c2
          TagSpecifications:
            - ResourceType: instance
              Tags:
              - Key: Name
                Value: consul-server
          UserData:
            Fn::Base64:
              Fn::Sub:
                  |
                  #!/bin/bash -xe
                  set -e

                  # mkdir -p /efs
                  # mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 fs-df827476.efs.us-west-2.amazonaws.com:/ /efs

                  echo "Grabbing IPs..."
                  PRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)
                  PUBLIC_IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)

                  # Setup Consul
                  mkdir -p /etc/consul.d
                  mkdir -p /tmp/consul

                  tee /etc/consul.d/config.json > /dev/null <<EOF
                  {
                    "bind_addr": "$PRIVATE_IP",
                    "client_addr": "0.0.0.0",
                    "connect": {
                      "enabled": true
                    },
                    "advertise_addr": "$PRIVATE_IP",
                    "advertise_addr_wan": "$PUBLIC_IP",
                    "data_dir": "/tmp/consul",
                    "disable_remote_exec": true,
                    "disable_update_check": true,
                    "leave_on_terminate": true,
                    "bootstrap_expect": 3,
                    "retry_join": ["provider=aws tag_key=Name tag_value=consul-server"],
                    "server": true,
                    "ui": true
                  }
                  EOF

                  consul agent -config-dir="/etc/consul.d" &
                  AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)

                  export AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)
                  if [ $AZ = "us-west-2a" ]; then
                    echo "We are in ${AZ}. I will back things up."
                    while true; do
                      sleep 43200
                      echo "Starting backup."
                      export BOSTON=$(date +%Y%m%d%H%M)
                      consul snapshot save $BOSTON.snap
                      aws s3 cp $BOSTON.snap s3://kloudcover/consul/$BOSTON.snap
                      echo "Backed up consul."
                    done
                  fi
        - BlockDeviceMappings:
          - DeviceName: "/dev/xvdcz"
            Ebs:
              DeleteOnTermination: 'true'
              VolumeSize: !Ref VolumeSize
              VolumeType: gp2
          IamInstanceProfile:
            Arn: !GetAtt InstanceProfile.Arn
          ImageId: !Ref ImageId
          InstanceType: t2.small
          KeyName: boston
          WeightedCapacity: 1
          Monitoring:
            Enabled: 'true'
          SecurityGroups:
          - GroupId:
              Ref: ConsulBadgeSG
          - GroupId:
              Ref: ConsulPort22SG

          SpotPrice: '0.015'
          SubnetId: subnet-9b2938c2
          TagSpecifications:
            - ResourceType: instance
              Tags:
              - Key: Name
                Value: consul-server
          UserData:
            Fn::Base64:
              Fn::Sub:
                  |
                  #!/bin/bash -xe
                  set -e

                  # mkdir -p /efs
                  # mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 fs-df827476.efs.us-west-2.amazonaws.com:/ /efs

                  echo "Grabbing IPs..."
                  PRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)
                  PUBLIC_IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)

                  # Setup Consul
                  mkdir -p /etc/consul.d
                  mkdir -p /tmp/consul

                  tee /etc/consul.d/config.json > /dev/null <<EOF
                  {
                    "bind_addr": "$PRIVATE_IP",
                    "client_addr": "0.0.0.0",
                    "connect": {
                      "enabled": true
                    },
                    "advertise_addr": "$PRIVATE_IP",
                    "advertise_addr_wan": "$PUBLIC_IP",
                    "data_dir": "/tmp/consul",
                    "disable_remote_exec": true,
                    "disable_update_check": true,
                    "leave_on_terminate": true,
                    "bootstrap_expect": 3,
                    "retry_join": ["provider=aws tag_key=Name tag_value=consul-server"],
                    "server": true,
                    "ui": true
                  }
                  EOF

                  consul agent -config-dir="/etc/consul.d" &
                  AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)

                  export AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)
                  if [ $AZ = "us-west-2a" ]; then
                    echo "We are in ${AZ}. I will back things up."
                    while true; do
                      sleep 43200
                      echo "Starting backup."
                      export BOSTON=$(date +%Y%m%d%H%M)
                      consul snapshot save $BOSTON.snap
                      aws s3 cp $BOSTON.snap s3://kloudcover/consul/$BOSTON.snap
                      echo "Backed up consul."
                    done
                  fi
 # instance types
 # for spots
